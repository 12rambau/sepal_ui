name: Build

on:
  push:
    branches:
      - main
  pull_request:

env:
  PLANET_API_CREDENTIALS: ${{ secrets.PLANET_API_CREDENTIALS }}
  PLANET_API_KEY: ${{ secrets.PLANET_API_KEY }}
  EARTHENGINE_TOKEN: ${{ secrets.EARTHENGINE_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: pre-commit/action@v3.0.0

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install GDAL
        run: |
          python -m pip install --upgrade pip
          pip install --find-links=https://girder.github.io/large_image_wheels --no-cache GDAL

      - name: Install localetileserver
        run: |
          pip install localtileserver

      - name: Install dependencies
        run: pip install .[test]

      - name: test the entrypoints
        if: matrix.python-version == '3.9'
        run: |
          module_deploy --help
          module_factory --help
          module_l10n --help
          module_theme --help
          module_venv --help
          activate_venv --help
          sepal_ipyvuetify --help

      - name: build the documentation
        if: matrix.python-version == '3.8'
        run: |
          pip install .[doc]
          pip install git+https://github.com/jenshnielsen/sphinx.git@fix_9884
          pip install git+https://github.com/12rambau/deprecated.git@master
          sphinx-apidoc --force --module-first --templatedir=docs/source/_templates/apidoc -o docs/source/modules ./sepal_ui
          sphinx-build -b html docs/source docs/build/html --keep-going -w warnings.txt

      - name: Check that there are no unexpected Sphinx warnings
        if: matrix.python-version == '3.8'
        run: python tests/check_warnings.py

      - name: test with pytest
        run: pytest --color=yes --cov --cov-report=xml tests

      - name: assess dead fixtures
        if: matrix.python-version == '3.8'
        run: pytest --dead-fixtures

      - name: build the template panel application
        if: matrix.python-version == '3.8'
        run: pytest --nbmake sepal_ui/templates/panel_app/ui.ipynb

      - name: build the template map application
        if: matrix.python-version == '3.8'
        run: pytest --nbmake sepal_ui/templates/map_app/ui.ipynb

      - name: coverage
        run: coverage xml

      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
